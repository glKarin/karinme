org.microemu.app.util.MIDletResourceLoader
org.microemu.app.util.MIDletResourceLoader: boolean traceResourceLoading
org.microemu.app.util.MIDletResourceLoader: java.lang.ClassLoader classLoader
org.microemu.app.util.MIDletResourceLoader: MIDletResourceLoader()
org.microemu.app.util.MIDletResourceLoader: java.io.InputStream getResourceAsStream(java.lang.Class,java.lang.String)
org.microemu.app.util.MIDletThread
org.microemu.app.util.MIDletThread: int graceTerminationPeriod
org.microemu.app.util.MIDletThread: MIDletThread()
org.microemu.app.util.MIDletThread: MIDletThread(java.lang.Runnable)
org.microemu.app.util.MIDletThread: MIDletThread(java.lang.Runnable,java.lang.String)
org.microemu.app.util.MIDletThread: MIDletThread(java.lang.String)
org.microemu.app.util.MIDletThread: void run()
org.microemu.app.util.MIDletThread: void contextDestroyed(org.microemu.MIDletContext)
org.microemu.app.util.MIDletThread: boolean hasRunningThreads(org.microemu.MIDletContext)
org.microemu.app.util.MIDletTimer
org.microemu.app.util.MIDletTimer: MIDletTimer()
org.microemu.app.util.MIDletTimer: void schedule(java.util.TimerTask,java.util.Date)
org.microemu.app.util.MIDletTimer: void schedule(java.util.TimerTask,java.util.Date,long)
org.microemu.app.util.MIDletTimer: void schedule(java.util.TimerTask,long)
org.microemu.app.util.MIDletTimer: void schedule(java.util.TimerTask,long,long)
org.microemu.app.util.MIDletTimer: void scheduleAtFixedRate(java.util.TimerTask,java.util.Date,long)
org.microemu.app.util.MIDletTimer: void scheduleAtFixedRate(java.util.TimerTask,long,long)
org.microemu.app.util.MIDletTimer: void cancel()
org.microemu.app.util.MIDletTimer: void run()
org.microemu.app.util.MIDletTimer: void contextDestroyed(org.microemu.MIDletContext)
org.microemu.app.util.MIDletTimerTask
org.microemu.app.util.MIDletTimerTask: MIDletTimerTask()
org.microemu.app.util.MIDletTimerTask: boolean cancel()
org.microemu.app.util.MIDletTimerTask: long scheduledExecutionTime()
org.microemu.microedition.io.ConnectorImpl
org.microemu.microedition.io.ConnectorImpl: java.security.AccessControlContext acc
org.microemu.microedition.io.ConnectorImpl: boolean debugConnectionInvocations
org.microemu.microedition.io.ConnectorImpl: boolean needPrivilegedCalls
org.microemu.microedition.io.ConnectorImpl: ConnectorImpl()
org.microemu.microedition.io.ConnectorImpl: boolean isWebstart()
org.microemu.microedition.io.ConnectorImpl: javax.microedition.io.Connection open(java.lang.String,int,boolean)
org.microemu.microedition.io.ConnectorImpl: java.lang.Class[] getAllInterfaces(java.lang.Class)
org.microemu.microedition.io.ConnectorImpl: javax.microedition.io.Connection openSecureProxy(java.lang.String,int,boolean,boolean)
org.microemu.microedition.io.ConnectorImpl: javax.microedition.io.Connection openSecure(java.lang.String,int,boolean)
org.microemu.microedition.io.ConnectorImpl: boolean access$000(org.microemu.microedition.io.ConnectorImpl)
org.microemu.microedition.io.ConnectorImpl: javax.microedition.io.Connection access$100(org.microemu.microedition.io.ConnectorImpl,java.lang.String,int,boolean,boolean)
org.microemu.microedition.io.ConnectorImpl: javax.microedition.io.Connection access$200(org.microemu.microedition.io.ConnectorImpl,java.lang.String,int,boolean)
org.microemu.microedition.io.ConnectorImpl: void <clinit>()
org.microemu.Injected
org.microemu.Injected: long serialVersionUID
org.microemu.Injected: java.io.PrintStream out
org.microemu.Injected: java.io.PrintStream err
org.microemu.Injected: Injected()
org.microemu.Injected: java.io.PrintStream outPrintStream()
org.microemu.Injected: java.io.PrintStream errPrintStream()
org.microemu.Injected: void printStackTrace(java.lang.Throwable)
org.microemu.Injected: java.lang.String getProperty(java.lang.String)
org.microemu.Injected: java.io.InputStream getResourceAsStream(java.lang.Class,java.lang.String)
org.microemu.Injected: java.lang.Throwable handleCatchThrowable(java.lang.Throwable)
org.microemu.Injected: void <clinit>()
org.microemu.device.impl.Font
org.microemu.device.impl.Font: int charWidth(char)
org.microemu.device.impl.Font: int charsWidth(char[],int,int)
org.microemu.device.impl.Font: int getBaselinePosition()
org.microemu.device.impl.Font: int getHeight()
org.microemu.device.impl.Font: int stringWidth(java.lang.String)
org.microemu.device.j2se.GrayImageFilter
org.microemu.device.j2se.GrayImageFilter: GrayImageFilter()
org.microemu.device.j2se.GrayImageFilter: GrayImageFilter(double,double,double)
org.microemu.device.j2se.GrayImageFilter: int filterRGB(int,int,int)
org.microemu.device.impl.ButtonDetaultDeviceKeyCodes
org.microemu.device.impl.ButtonDetaultDeviceKeyCodes: ButtonDetaultDeviceKeyCodes()
org.microemu.device.impl.ButtonDetaultDeviceKeyCodes: int getKeyCode(org.microemu.device.impl.ButtonName)
org.microemu.device.impl.ButtonDetaultDeviceKeyCodes: int getGameAction(org.microemu.device.impl.ButtonName)
org.microemu.device.impl.ButtonDetaultDeviceKeyCodes: org.microemu.device.impl.ButtonName getButtonNameByGameAction(int)
org.microemu.device.impl.ui.CommandManager
org.microemu.device.impl.ui.CommandManager: javax.microedition.lcdui.Command CMD_MENU
org.microemu.device.impl.ui.CommandManager: org.microemu.device.impl.ui.CommandManager getInstance()
org.microemu.device.impl.ui.CommandManager: void commandAction(javax.microedition.lcdui.Command)
org.microemu.device.impl.ui.CommandManager: void updateCommands(java.util.Vector)
org.microemu.device.j2se.J2SEDeviceButtonsHelper
org.microemu.device.j2se.J2SEDeviceButtonsHelper: J2SEDeviceButtonsHelper()
org.microemu.device.j2se.J2SEDeviceButtonsHelper: org.microemu.device.impl.SoftButton getSoftButton(java.awt.event.MouseEvent)
org.microemu.device.j2se.J2SEDeviceButtonsHelper: org.microemu.device.j2se.J2SEButton getSkinButton(java.awt.event.MouseEvent)
org.microemu.device.j2se.J2SEDeviceButtonsHelper: org.microemu.device.j2se.J2SEButton getButton(java.awt.event.KeyEvent)
org.microemu.device.j2se.J2SEDeviceButtonsHelper: org.microemu.device.j2se.J2SEButton getButton(org.microemu.device.impl.ButtonName)
org.microemu.device.j2se.J2SEDisplayGraphics
org.microemu.device.j2se.J2SEDisplayGraphics: J2SEDisplayGraphics(org.microemu.device.j2se.J2SEGraphicsSurface)
org.microemu.device.j2se.J2SEDisplayGraphics: int getColor()
org.microemu.device.j2se.J2SEDisplayGraphics: void setColor(int)
org.microemu.device.j2se.J2SEDisplayGraphics: javax.microedition.lcdui.Font getFont()
org.microemu.device.j2se.J2SEDisplayGraphics: void setFont(javax.microedition.lcdui.Font)
org.microemu.device.j2se.J2SEDisplayGraphics: int getStrokeStyle()
org.microemu.device.j2se.J2SEDisplayGraphics: void setStrokeStyle(int)
org.microemu.device.j2se.J2SEDisplayGraphics: void clipRect(int,int,int,int)
org.microemu.device.j2se.J2SEDisplayGraphics: void setClip(int,int,int,int)
org.microemu.device.j2se.J2SEDisplayGraphics: int getClipX()
org.microemu.device.j2se.J2SEDisplayGraphics: int getClipY()
org.microemu.device.j2se.J2SEDisplayGraphics: int getClipHeight()
org.microemu.device.j2se.J2SEDisplayGraphics: int getClipWidth()
org.microemu.device.j2se.J2SEDisplayGraphics: void drawArc(int,int,int,int,int,int)
org.microemu.device.j2se.J2SEDisplayGraphics: void drawImage(javax.microedition.lcdui.Image,int,int,int)
org.microemu.device.j2se.J2SEDisplayGraphics: void drawLine(int,int,int,int)
org.microemu.device.j2se.J2SEDisplayGraphics: void drawRect(int,int,int,int)
org.microemu.device.j2se.J2SEDisplayGraphics: void drawRoundRect(int,int,int,int,int,int)
org.microemu.device.j2se.J2SEDisplayGraphics: void drawString(java.lang.String,int,int,int)
org.microemu.device.j2se.J2SEDisplayGraphics: void drawSubstring(java.lang.String,int,int,int,int,int)
org.microemu.device.j2se.J2SEDisplayGraphics: void fillArc(int,int,int,int,int,int)
org.microemu.device.j2se.J2SEDisplayGraphics: void fillRect(int,int,int,int)
org.microemu.device.j2se.J2SEDisplayGraphics: void fillRoundRect(int,int,int,int,int,int)
org.microemu.device.j2se.J2SEDisplayGraphics: void translate(int,int)
org.microemu.device.j2se.J2SEDisplayGraphics: void drawRegion(javax.microedition.lcdui.Image,int,int,int,int,int,int,int,int)
org.microemu.device.j2se.J2SEDisplayGraphics: void drawRGB(int[],int,int,int,int,int,int,boolean)
org.microemu.device.j2se.J2SEDisplayGraphics: void fillTriangle(int,int,int,int,int,int)
org.microemu.device.j2se.J2SEDisplayGraphics: void copyArea(int,int,int,int,int,int,int)
org.microemu.device.j2se.J2SEDisplayGraphics: org.microemu.device.j2se.J2SEGraphicsSurface getGraphicsSurface()
org.microemu.device.impl.Button
org.microemu.device.impl.Button: int NAME_RIMARY_SINCE_SKIN_VERSION
org.microemu.device.j2se.J2SEGraphicsSurface
org.microemu.device.j2se.J2SEGraphicsSurface: J2SEGraphicsSurface(int,int,boolean,int)
org.microemu.device.j2se.J2SEGraphicsSurface: java.awt.Graphics2D getGraphics()
org.microemu.device.j2se.J2SEGraphicsSurface: java.awt.image.BufferedImage getImage()
org.microemu.device.j2se.J2SEGraphicsSurface: int[] getImageData()
org.microemu.device.j2se.J2SEImmutableImage
org.microemu.device.j2se.J2SEImmutableImage: J2SEImmutableImage(java.awt.Image)
org.microemu.device.j2se.J2SEImmutableImage: J2SEImmutableImage(org.microemu.device.j2se.J2SEMutableImage)
org.microemu.device.j2se.J2SEImmutableImage: int getHeight()
org.microemu.device.j2se.J2SEImmutableImage: java.awt.Image getImage()
org.microemu.device.j2se.J2SEImmutableImage: int getWidth()
org.microemu.device.j2se.J2SEImmutableImage: void getRGB(int[],int,int,int,int,int,int)
org.microemu.device.j2se.ui.J2SEGaugeUI
org.microemu.device.j2se.ui.J2SEGaugeUI: J2SEGaugeUI(javax.microedition.lcdui.Gauge)
org.microemu.device.j2se.ui.J2SEGaugeUI: void setDefaultCommand(javax.microedition.lcdui.Command)
org.microemu.device.j2se.ui.J2SEGaugeUI: void setLabel(java.lang.String)
org.microemu.device.j2se.ui.J2SEGaugeUI: void setValue(int)
org.microemu.device.j2se.ui.J2SEGaugeUI: int getValue()
org.microemu.device.j2se.ui.J2SEGaugeUI: void setMaxValue(int)
org.microemu.device.impl.ui.DisplayableImplUI
org.microemu.device.impl.ui.DisplayableImplUI: void addCommandUI(org.microemu.device.ui.CommandUI)
org.microemu.device.impl.ui.DisplayableImplUI: void removeCommandUI(org.microemu.device.ui.CommandUI)
org.microemu.device.impl.ui.DisplayableImplUI: void setCommandListener(javax.microedition.lcdui.CommandListener)
org.microemu.device.impl.ui.DisplayableImplUI: javax.microedition.lcdui.CommandListener getCommandListener()
org.microemu.device.impl.ui.DisplayableImplUI: void hideNotify()
org.microemu.device.impl.ui.DisplayableImplUI: void showNotify()
org.microemu.device.impl.ui.DisplayableImplUI: void invalidate()
org.microemu.device.impl.ui.DisplayableImplUI: java.util.Vector getCommandsUI()
org.microemu.device.impl.PositionedImage
org.microemu.device.impl.PositionedImage: PositionedImage(javax.microedition.lcdui.Image,org.microemu.device.impl.Rectangle)
org.microemu.device.impl.PositionedImage: javax.microedition.lcdui.Image getImage()
org.microemu.device.impl.PositionedImage: org.microemu.device.impl.Rectangle getRectangle()
org.microemu.device.j2se.RGBImageFilter
org.microemu.device.j2se.RGBImageFilter: RGBImageFilter()
org.microemu.device.j2se.RGBImageFilter: int filterRGB(int,int,int)
org.microemu.device.j2se.J2SEFont
org.microemu.device.j2se.J2SEFont: java.awt.Font getFont()
org.microemu.device.j2se.J2SEFont: void setAntialiasing(boolean)
org.microemu.device.j2se.ui.J2SEDateFieldUI
org.microemu.device.j2se.ui.J2SEDateFieldUI: J2SEDateFieldUI(javax.microedition.lcdui.DateField)
org.microemu.device.j2se.ui.J2SEDateFieldUI: void setDefaultCommand(javax.microedition.lcdui.Command)
org.microemu.device.j2se.ui.J2SEDateFieldUI: void setLabel(java.lang.String)
org.microemu.device.j2se.ui.J2SEDateFieldUI: void setInputMode(int)
org.microemu.device.j2se.ui.J2SEDateFieldUI: void setDate(java.util.Date)
org.microemu.device.j2se.ui.J2SEDateFieldUI: java.util.Date getDate()
org.microemu.device.impl.FontManagerImpl
org.microemu.device.impl.FontManagerImpl: void setAntialiasing(boolean)
org.microemu.device.impl.FontManagerImpl: void setFont(java.lang.String,java.lang.String,java.lang.String,org.microemu.device.impl.Font)
org.microemu.device.impl.FontManagerImpl: org.microemu.device.impl.Font createSystemFont(java.lang.String,java.lang.String,int,boolean)
org.microemu.device.impl.FontManagerImpl: org.microemu.device.impl.Font createTrueTypeFont(java.net.URL,java.lang.String,int,boolean)
org.microemu.device.j2se.ui.J2SETextFieldUI
org.microemu.device.j2se.ui.J2SETextFieldUI: J2SETextFieldUI(javax.microedition.lcdui.TextField)
org.microemu.device.j2se.ui.J2SETextFieldUI: void setDefaultCommand(javax.microedition.lcdui.Command)
org.microemu.device.j2se.ui.J2SETextFieldUI: void setLabel(java.lang.String)
org.microemu.device.j2se.ui.J2SETextFieldUI: void setConstraints(int)
org.microemu.device.j2se.ui.J2SETextFieldUI: void setString(java.lang.String)
org.microemu.device.j2se.ui.J2SETextFieldUI: java.lang.String getString()
org.microemu.device.j2se.J2SESystemFont
org.microemu.device.j2se.J2SESystemFont: J2SESystemFont(java.lang.String,java.lang.String,int,boolean)
org.microemu.device.j2se.J2SESystemFont: void setAntialiasing(boolean)
org.microemu.device.j2se.J2SESystemFont: int charWidth(char)
org.microemu.device.j2se.J2SESystemFont: int charsWidth(char[],int,int)
org.microemu.device.j2se.J2SESystemFont: int getBaselinePosition()
org.microemu.device.j2se.J2SESystemFont: int getHeight()
org.microemu.device.j2se.J2SESystemFont: int stringWidth(java.lang.String)
org.microemu.device.j2se.J2SESystemFont: java.awt.Font getFont()
org.microemu.device.j2se.ui.J2SEAlertUI
org.microemu.device.j2se.ui.J2SEAlertUI: J2SEAlertUI(javax.microedition.lcdui.Alert)
org.microemu.device.j2se.ui.J2SEAlertUI: void setString(java.lang.String)
org.microemu.device.impl.ui.DisplayableImplUI: void addCommandUI(org.microemu.device.ui.CommandUI)
org.microemu.device.impl.ui.DisplayableImplUI: void removeCommandUI(org.microemu.device.ui.CommandUI)
org.microemu.device.impl.ui.DisplayableImplUI: void setCommandListener(javax.microedition.lcdui.CommandListener)
org.microemu.device.impl.ui.DisplayableImplUI: javax.microedition.lcdui.CommandListener getCommandListener()
org.microemu.device.impl.ui.DisplayableImplUI: void hideNotify()
org.microemu.device.impl.ui.DisplayableImplUI: void showNotify()
org.microemu.device.impl.ui.DisplayableImplUI: void invalidate()
org.microemu.device.impl.ui.DisplayableImplUI: java.util.Vector getCommandsUI()
org.microemu.device.j2se.ui.J2SEChoiceGroupUI
org.microemu.device.j2se.ui.J2SEChoiceGroupUI: J2SEChoiceGroupUI(javax.microedition.lcdui.ChoiceGroup,int)
org.microemu.device.j2se.ui.J2SEChoiceGroupUI: void setDefaultCommand(javax.microedition.lcdui.Command)
org.microemu.device.j2se.ui.J2SEChoiceGroupUI: void setLabel(java.lang.String)
org.microemu.device.j2se.ui.J2SEChoiceGroupUI: void delete(int)
org.microemu.device.j2se.ui.J2SEChoiceGroupUI: void deleteAll()
org.microemu.device.j2se.ui.J2SEChoiceGroupUI: void setSelectedIndex(int,boolean)
org.microemu.device.j2se.ui.J2SEChoiceGroupUI: int getSelectedIndex()
org.microemu.device.j2se.ui.J2SEChoiceGroupUI: void insert(int,java.lang.String,javax.microedition.lcdui.Image)
org.microemu.device.j2se.ui.J2SEChoiceGroupUI: boolean isSelected(int)
org.microemu.device.j2se.ui.J2SEChoiceGroupUI: void setSelectedFlags(boolean[])
org.microemu.device.j2se.ui.J2SEChoiceGroupUI: int getSelectedFlags(boolean[])
org.microemu.device.j2se.ui.J2SEChoiceGroupUI: java.lang.String getString(int)
org.microemu.device.j2se.ui.J2SEChoiceGroupUI: void set(int,java.lang.String,javax.microedition.lcdui.Image)
org.microemu.device.j2se.ui.J2SEChoiceGroupUI: int size()
org.microemu.device.j2se.J2SEDevice
org.microemu.device.j2se.J2SEDevice: J2SEDevice()
org.microemu.device.j2se.J2SEDevice: org.microemu.device.ui.UIFactory getUIFactory()
org.microemu.device.impl.DeviceImpl: java.lang.String DEFAULT_LOCATION
org.microemu.device.impl.DeviceImpl: java.lang.String RESIZABLE_LOCATION
org.microemu.device.impl.DeviceImpl: DeviceImpl()
org.microemu.device.impl.DeviceImpl: org.microemu.device.impl.DeviceImpl create(org.microemu.device.EmulatorContext,java.lang.ClassLoader,java.lang.String,java.lang.Class)
org.microemu.device.impl.DeviceImpl: void init()
org.microemu.device.impl.DeviceImpl: void init(org.microemu.device.EmulatorContext)
org.microemu.device.impl.DeviceImpl: void init(org.microemu.device.EmulatorContext,java.lang.String)
org.microemu.device.impl.DeviceImpl: java.lang.String getDescriptorLocation()
org.microemu.device.impl.DeviceImpl: void destroy()
org.microemu.device.impl.DeviceImpl: java.lang.String getName()
org.microemu.device.impl.DeviceImpl: org.microemu.device.EmulatorContext getEmulatorContext()
org.microemu.device.impl.DeviceImpl: org.microemu.device.InputMethod getInputMethod()
org.microemu.device.impl.DeviceImpl: org.microemu.device.FontManager getFontManager()
org.microemu.device.impl.DeviceImpl: org.microemu.device.DeviceDisplay getDeviceDisplay()
org.microemu.device.impl.DeviceImpl: javax.microedition.lcdui.Image getNormalImage()
org.microemu.device.impl.DeviceImpl: javax.microedition.lcdui.Image getOverImage()
org.microemu.device.impl.DeviceImpl: javax.microedition.lcdui.Image getPressedImage()
org.microemu.device.impl.DeviceImpl: java.util.Vector getSoftButtons()
org.microemu.device.impl.DeviceImpl: java.util.Vector getButtons()
org.microemu.device.impl.DeviceImpl: boolean hasPointerEvents()
org.microemu.device.impl.DeviceImpl: boolean hasPointerMotionEvents()
org.microemu.device.impl.DeviceImpl: boolean hasRepeatEvents()
org.microemu.device.impl.DeviceImpl: boolean vibrate(int)
org.microemu.device.impl.DeviceImpl: java.util.Map getSystemProperties()
org.microemu.device.j2se.BWImageFilter
org.microemu.device.j2se.BWImageFilter: BWImageFilter()
org.microemu.device.j2se.BWImageFilter: BWImageFilter(double,double,double)
org.microemu.device.j2se.BWImageFilter: int filterRGB(int,int,int)
org.microemu.device.j2se.ui.J2SECanvasUI
org.microemu.device.j2se.ui.J2SECanvasUI: J2SECanvasUI(javax.microedition.lcdui.Canvas)
org.microemu.device.impl.ui.DisplayableImplUI: void addCommandUI(org.microemu.device.ui.CommandUI)
org.microemu.device.impl.ui.DisplayableImplUI: void removeCommandUI(org.microemu.device.ui.CommandUI)
org.microemu.device.impl.ui.DisplayableImplUI: void setCommandListener(javax.microedition.lcdui.CommandListener)
org.microemu.device.impl.ui.DisplayableImplUI: javax.microedition.lcdui.CommandListener getCommandListener()
org.microemu.device.impl.ui.DisplayableImplUI: void hideNotify()
org.microemu.device.impl.ui.DisplayableImplUI: void showNotify()
org.microemu.device.impl.ui.DisplayableImplUI: void invalidate()
org.microemu.device.impl.ui.DisplayableImplUI: java.util.Vector getCommandsUI()
org.microemu.device.j2se.J2SEInputMethod
org.microemu.device.j2se.J2SEInputMethod: J2SEInputMethod()
org.microemu.device.j2se.J2SEInputMethod: int getGameAction(int)
org.microemu.device.j2se.J2SEInputMethod: int getKeyCode(int)
org.microemu.device.j2se.J2SEInputMethod: java.lang.String getKeyName(int)
org.microemu.device.j2se.J2SEInputMethod: void buttonTyped(org.microemu.device.j2se.J2SEButton)
org.microemu.device.j2se.J2SEInputMethod: void clipboardPaste(java.lang.String)
org.microemu.device.j2se.J2SEInputMethod: void buttonPressed(org.microemu.device.j2se.J2SEButton,char)
org.microemu.device.j2se.J2SEInputMethod: void buttonReleased(org.microemu.device.j2se.J2SEButton,char)
org.microemu.device.j2se.J2SEInputMethod: org.microemu.device.j2se.J2SEButton getButton(java.awt.event.KeyEvent)
org.microemu.device.impl.InputMethodImpl: InputMethodImpl()
org.microemu.device.impl.InputMethodImpl: void dispose()
org.microemu.device.impl.InputMethodImpl: void run()
org.microemu.device.impl.InputMethodImpl: void setInputMethodListener(org.microemu.device.InputMethodListener)
org.microemu.device.impl.InputMethodImpl: void pointerPressed(int,int)
org.microemu.device.impl.InputMethodImpl: void pointerReleased(int,int)
org.microemu.device.impl.InputMethodImpl: void pointerDragged(int,int)
org.microemu.device.impl.DeviceDisplayImpl
org.microemu.device.impl.DeviceDisplayImpl: javax.microedition.lcdui.Image createSystemImage(java.net.URL)
org.microemu.device.impl.DeviceDisplayImpl: org.microemu.device.impl.Button createButton(int,java.lang.String,org.microemu.device.impl.Shape,int,java.lang.String,java.lang.String,java.util.Hashtable,boolean)
org.microemu.device.impl.DeviceDisplayImpl: org.microemu.device.impl.SoftButton createSoftButton(int,java.lang.String,org.microemu.device.impl.Shape,int,java.lang.String,org.microemu.device.impl.Rectangle,java.lang.String,java.util.Vector,javax.microedition.lcdui.Font)
org.microemu.device.impl.DeviceDisplayImpl: org.microemu.device.impl.SoftButton createSoftButton(int,java.lang.String,org.microemu.device.impl.Rectangle,javax.microedition.lcdui.Image,javax.microedition.lcdui.Image)
org.microemu.device.impl.DeviceDisplayImpl: void setNumColors(int)
org.microemu.device.impl.DeviceDisplayImpl: void setIsColor(boolean)
org.microemu.device.impl.DeviceDisplayImpl: void setNumAlphaLevels(int)
org.microemu.device.impl.DeviceDisplayImpl: void setBackgroundColor(org.microemu.device.impl.Color)
org.microemu.device.impl.DeviceDisplayImpl: void setForegroundColor(org.microemu.device.impl.Color)
org.microemu.device.impl.DeviceDisplayImpl: void setDisplayRectangle(org.microemu.device.impl.Rectangle)
org.microemu.device.impl.DeviceDisplayImpl: void setDisplayPaintable(org.microemu.device.impl.Rectangle)
org.microemu.device.impl.DeviceDisplayImpl: void setMode123Image(org.microemu.device.impl.PositionedImage)
org.microemu.device.impl.DeviceDisplayImpl: void setModeAbcLowerImage(org.microemu.device.impl.PositionedImage)
org.microemu.device.impl.DeviceDisplayImpl: void setModeAbcUpperImage(org.microemu.device.impl.PositionedImage)
org.microemu.device.impl.DeviceDisplayImpl: boolean isResizable()
org.microemu.device.impl.DeviceDisplayImpl: void setResizable(boolean)
org.microemu.device.j2se.ui.J2SETextBoxUI
org.microemu.device.j2se.ui.J2SETextBoxUI: J2SETextBoxUI(javax.microedition.lcdui.TextBox)
org.microemu.device.j2se.ui.J2SETextBoxUI: int getCaretPosition()
org.microemu.device.j2se.ui.J2SETextBoxUI: java.lang.String getString()
org.microemu.device.j2se.ui.J2SETextBoxUI: void setString(java.lang.String)
org.microemu.device.j2se.ui.J2SETextBoxUI: void insert(java.lang.String,int)
org.microemu.device.j2se.ui.J2SETextBoxUI: void delete(int,int)
org.microemu.device.impl.ui.DisplayableImplUI: void addCommandUI(org.microemu.device.ui.CommandUI)
org.microemu.device.impl.ui.DisplayableImplUI: void removeCommandUI(org.microemu.device.ui.CommandUI)
org.microemu.device.impl.ui.DisplayableImplUI: void setCommandListener(javax.microedition.lcdui.CommandListener)
org.microemu.device.impl.ui.DisplayableImplUI: javax.microedition.lcdui.CommandListener getCommandListener()
org.microemu.device.impl.ui.DisplayableImplUI: void hideNotify()
org.microemu.device.impl.ui.DisplayableImplUI: void showNotify()
org.microemu.device.impl.ui.DisplayableImplUI: void invalidate()
org.microemu.device.impl.ui.DisplayableImplUI: java.util.Vector getCommandsUI()
org.microemu.device.j2se.J2SEFontManager
org.microemu.device.j2se.J2SEFontManager: J2SEFontManager()
org.microemu.device.j2se.J2SEFontManager: void init()
org.microemu.device.j2se.J2SEFontManager: int charWidth(javax.microedition.lcdui.Font,char)
org.microemu.device.j2se.J2SEFontManager: int charsWidth(javax.microedition.lcdui.Font,char[],int,int)
org.microemu.device.j2se.J2SEFontManager: int getBaselinePosition(javax.microedition.lcdui.Font)
org.microemu.device.j2se.J2SEFontManager: int getHeight(javax.microedition.lcdui.Font)
org.microemu.device.j2se.J2SEFontManager: int stringWidth(javax.microedition.lcdui.Font,java.lang.String)
org.microemu.device.j2se.J2SEFontManager: int substringWidth(javax.microedition.lcdui.Font,java.lang.String,int,int)
org.microemu.device.j2se.J2SEFontManager: boolean getAntialiasing()
org.microemu.device.j2se.J2SEFontManager: void setAntialiasing(boolean)
org.microemu.device.j2se.J2SEFontManager: void setFont(java.lang.String,java.lang.String,java.lang.String,org.microemu.device.impl.Font)
org.microemu.device.j2se.J2SEFontManager: org.microemu.device.impl.Font createSystemFont(java.lang.String,java.lang.String,int,boolean)
org.microemu.device.j2se.J2SEFontManager: org.microemu.device.impl.Font createTrueTypeFont(java.net.URL,java.lang.String,int,boolean)
org.microemu.device.j2se.J2SEButton
org.microemu.device.j2se.J2SEButton: J2SEButton(int,java.lang.String,org.microemu.device.impl.Shape,int,java.lang.String,java.lang.String,java.util.Hashtable,boolean)
org.microemu.device.j2se.J2SEButton: int getKeyboardKey()
org.microemu.device.j2se.J2SEButton: int getKeyCode()
org.microemu.device.j2se.J2SEButton: org.microemu.device.impl.ButtonName getFunctionalName()
org.microemu.device.j2se.J2SEButton: int[] getKeyboardKeyCodes()
org.microemu.device.j2se.J2SEButton: char[] getKeyboardCharCodes()
org.microemu.device.j2se.J2SEButton: boolean isModeChange()
org.microemu.device.j2se.J2SEButton: char[] getChars(int)
org.microemu.device.j2se.J2SEButton: boolean isChar(char,int)
org.microemu.device.j2se.J2SEButton: java.lang.String getName()
org.microemu.device.j2se.J2SEButton: org.microemu.device.impl.Shape getShape()
org.microemu.device.impl.ButtonName
org.microemu.device.impl.ButtonName: org.microemu.device.impl.ButtonName SOFT1
org.microemu.device.impl.ButtonName: org.microemu.device.impl.ButtonName SOFT2
org.microemu.device.impl.ButtonName: org.microemu.device.impl.ButtonName SOFT3
org.microemu.device.impl.ButtonName: org.microemu.device.impl.ButtonName SELECT
org.microemu.device.impl.ButtonName: org.microemu.device.impl.ButtonName UP
org.microemu.device.impl.ButtonName: org.microemu.device.impl.ButtonName DOWN
org.microemu.device.impl.ButtonName: org.microemu.device.impl.ButtonName LEFT
org.microemu.device.impl.ButtonName: org.microemu.device.impl.ButtonName RIGHT
org.microemu.device.impl.ButtonName: org.microemu.device.impl.ButtonName BACK_SPACE
org.microemu.device.impl.ButtonName: org.microemu.device.impl.ButtonName DELETE
org.microemu.device.impl.ButtonName: org.microemu.device.impl.ButtonName KEY_NUM0
org.microemu.device.impl.ButtonName: org.microemu.device.impl.ButtonName KEY_NUM1
org.microemu.device.impl.ButtonName: org.microemu.device.impl.ButtonName KEY_NUM2
org.microemu.device.impl.ButtonName: org.microemu.device.impl.ButtonName KEY_NUM3
org.microemu.device.impl.ButtonName: org.microemu.device.impl.ButtonName KEY_NUM4
org.microemu.device.impl.ButtonName: org.microemu.device.impl.ButtonName KEY_NUM5
org.microemu.device.impl.ButtonName: org.microemu.device.impl.ButtonName KEY_NUM6
org.microemu.device.impl.ButtonName: org.microemu.device.impl.ButtonName KEY_NUM7
org.microemu.device.impl.ButtonName: org.microemu.device.impl.ButtonName KEY_NUM8
org.microemu.device.impl.ButtonName: org.microemu.device.impl.ButtonName KEY_NUM9
org.microemu.device.impl.ButtonName: org.microemu.device.impl.ButtonName KEY_STAR
org.microemu.device.impl.ButtonName: org.microemu.device.impl.ButtonName KEY_POUND
org.microemu.device.impl.ButtonName: org.microemu.device.impl.ButtonName getButtonName(java.lang.String)
org.microemu.device.impl.ButtonName: java.lang.String getName()
org.microemu.device.impl.ButtonName: java.lang.String toString()
org.microemu.device.j2se.J2SETrueTypeFont
org.microemu.device.j2se.J2SETrueTypeFont: J2SETrueTypeFont(java.net.URL,java.lang.String,int,boolean)
org.microemu.device.j2se.J2SETrueTypeFont: void setAntialiasing(boolean)
org.microemu.device.j2se.J2SETrueTypeFont: int charWidth(char)
org.microemu.device.j2se.J2SETrueTypeFont: int charsWidth(char[],int,int)
org.microemu.device.j2se.J2SETrueTypeFont: int getBaselinePosition()
org.microemu.device.j2se.J2SETrueTypeFont: int getHeight()
org.microemu.device.j2se.J2SETrueTypeFont: int stringWidth(java.lang.String)
org.microemu.device.j2se.J2SETrueTypeFont: java.awt.Font getFont()
org.microemu.device.impl.Color
org.microemu.device.impl.Color: Color(int)
org.microemu.device.impl.Color: int getRed()
org.microemu.device.impl.Color: int getGreen()
org.microemu.device.impl.Color: int getBlue()
org.microemu.device.impl.Color: int getRGB()
org.microemu.device.impl.Polygon
org.microemu.device.impl.Polygon: Polygon()
org.microemu.device.impl.Polygon: Polygon(int[],int[],int)
org.microemu.device.impl.Polygon: Polygon(org.microemu.device.impl.Polygon)
org.microemu.device.impl.Polygon: void addPoint(int,int)
org.microemu.device.impl.Polygon: org.microemu.device.impl.Rectangle getBounds()
org.microemu.device.impl.Polygon: boolean contains(int,int)
org.microemu.device.j2se.ui.J2SEImageStringItemUI
org.microemu.device.j2se.ui.J2SEImageStringItemUI: J2SEImageStringItemUI(javax.microedition.lcdui.Item)
org.microemu.device.j2se.ui.J2SEImageStringItemUI: void setDefaultCommand(javax.microedition.lcdui.Command)
org.microemu.device.j2se.ui.J2SEImageStringItemUI: void setLabel(java.lang.String)
org.microemu.device.j2se.ui.J2SEImageStringItemUI: void setImage(javax.microedition.lcdui.Image)
org.microemu.device.j2se.ui.J2SEImageStringItemUI: void setText(java.lang.String)
org.microemu.device.j2se.ui.J2SECustomItemUI
org.microemu.device.j2se.ui.J2SECustomItemUI: J2SECustomItemUI(org.microemu.CustomItemAccess)
org.microemu.device.j2se.ui.J2SECustomItemUI: void setDefaultCommand(javax.microedition.lcdui.Command)
org.microemu.device.j2se.ui.J2SECustomItemUI: void setLabel(java.lang.String)
org.microemu.device.j2se.ui.J2SECustomItemUI: void repaint()
org.microemu.device.j2se.J2SEButtonDefaultKeyCodes
org.microemu.device.j2se.J2SEButtonDefaultKeyCodes: J2SEButtonDefaultKeyCodes()
org.microemu.device.j2se.J2SEButtonDefaultKeyCodes: int[] getKeyCodes(org.microemu.device.impl.ButtonName)
org.microemu.device.j2se.J2SEButtonDefaultKeyCodes: java.lang.String getCharCodes(org.microemu.device.impl.ButtonName)
org.microemu.device.j2se.J2SEButtonDefaultKeyCodes: org.microemu.device.impl.ButtonName getBackwardCompatibleName(int)
org.microemu.device.impl.ui.CommandImplUI
org.microemu.device.impl.ui.CommandImplUI: CommandImplUI(javax.microedition.lcdui.Command)
org.microemu.device.impl.ui.CommandImplUI: javax.microedition.lcdui.Command getCommand()
org.microemu.device.impl.ui.CommandImplUI: void setImage(javax.microedition.lcdui.Image)
org.microemu.device.j2se.ui.J2SEFormUI
org.microemu.device.j2se.ui.J2SEFormUI: J2SEFormUI(javax.microedition.lcdui.Form)
org.microemu.device.j2se.ui.J2SEFormUI: int append(org.microemu.device.ui.ItemUI)
org.microemu.device.j2se.ui.J2SEFormUI: void delete(int)
org.microemu.device.j2se.ui.J2SEFormUI: void deleteAll()
org.microemu.device.j2se.ui.J2SEFormUI: void insert(int,org.microemu.device.ui.ItemUI)
org.microemu.device.j2se.ui.J2SEFormUI: void set(int,org.microemu.device.ui.ItemUI)
org.microemu.device.j2se.ui.J2SEFormUI: void setItemStateListener(javax.microedition.lcdui.ItemStateListener)
org.microemu.device.j2se.ui.J2SEFormUI: javax.microedition.lcdui.ItemStateListener getItemStateListener()
org.microemu.device.impl.ui.DisplayableImplUI: void addCommandUI(org.microemu.device.ui.CommandUI)
org.microemu.device.impl.ui.DisplayableImplUI: void removeCommandUI(org.microemu.device.ui.CommandUI)
org.microemu.device.impl.ui.DisplayableImplUI: void setCommandListener(javax.microedition.lcdui.CommandListener)
org.microemu.device.impl.ui.DisplayableImplUI: javax.microedition.lcdui.CommandListener getCommandListener()
org.microemu.device.impl.ui.DisplayableImplUI: void hideNotify()
org.microemu.device.impl.ui.DisplayableImplUI: void showNotify()
org.microemu.device.impl.ui.DisplayableImplUI: void invalidate()
org.microemu.device.impl.ui.DisplayableImplUI: java.util.Vector getCommandsUI()
org.microemu.device.impl.InputMethodImpl
org.microemu.device.impl.InputMethodImpl: InputMethodImpl()
org.microemu.device.impl.InputMethodImpl: void dispose()
org.microemu.device.impl.InputMethodImpl: void run()
org.microemu.device.impl.InputMethodImpl: void setInputMethodListener(org.microemu.device.InputMethodListener)
org.microemu.device.impl.InputMethodImpl: void pointerPressed(int,int)
org.microemu.device.impl.InputMethodImpl: void pointerReleased(int,int)
org.microemu.device.impl.InputMethodImpl: void pointerDragged(int,int)
org.microemu.device.j2se.ui.J2SEListUI
org.microemu.device.j2se.ui.J2SEListUI: J2SEListUI(javax.microedition.lcdui.List)
org.microemu.device.j2se.ui.J2SEListUI: int append(java.lang.String,javax.microedition.lcdui.Image)
org.microemu.device.j2se.ui.J2SEListUI: void setSelectCommand(javax.microedition.lcdui.Command)
org.microemu.device.j2se.ui.J2SEListUI: int getSelectedIndex()
org.microemu.device.j2se.ui.J2SEListUI: void setSelectedIndex(int,boolean)
org.microemu.device.j2se.ui.J2SEListUI: java.lang.String getString(int)
org.microemu.device.j2se.ui.J2SEListUI: void delete(int)
org.microemu.device.j2se.ui.J2SEListUI: void deleteAll()
org.microemu.device.j2se.ui.J2SEListUI: void insert(int,java.lang.String,javax.microedition.lcdui.Image)
org.microemu.device.j2se.ui.J2SEListUI: void set(int,java.lang.String,javax.microedition.lcdui.Image)
org.microemu.device.j2se.ui.J2SEListUI: int size()
org.microemu.device.impl.ui.DisplayableImplUI: void addCommandUI(org.microemu.device.ui.CommandUI)
org.microemu.device.impl.ui.DisplayableImplUI: void removeCommandUI(org.microemu.device.ui.CommandUI)
org.microemu.device.impl.ui.DisplayableImplUI: void setCommandListener(javax.microedition.lcdui.CommandListener)
org.microemu.device.impl.ui.DisplayableImplUI: javax.microedition.lcdui.CommandListener getCommandListener()
org.microemu.device.impl.ui.DisplayableImplUI: void hideNotify()
org.microemu.device.impl.ui.DisplayableImplUI: void showNotify()
org.microemu.device.impl.ui.DisplayableImplUI: void invalidate()
org.microemu.device.impl.ui.DisplayableImplUI: java.util.Vector getCommandsUI()
org.microemu.device.j2se.J2SESoftButton
org.microemu.device.j2se.J2SESoftButton: int LEFT
org.microemu.device.j2se.J2SESoftButton: int RIGHT
org.microemu.device.j2se.J2SESoftButton: J2SESoftButton(int,java.lang.String,org.microemu.device.impl.Shape,int,java.lang.String,org.microemu.device.impl.Rectangle,java.lang.String,java.util.Vector,javax.microedition.lcdui.Font)
org.microemu.device.j2se.J2SESoftButton: J2SESoftButton(int,java.lang.String,org.microemu.device.impl.Rectangle,javax.microedition.lcdui.Image,javax.microedition.lcdui.Image)
org.microemu.device.j2se.J2SESoftButton: int getType()
org.microemu.device.j2se.J2SESoftButton: void setCommand(javax.microedition.lcdui.Command)
org.microemu.device.j2se.J2SESoftButton: javax.microedition.lcdui.Command getCommand()
org.microemu.device.j2se.J2SESoftButton: org.microemu.device.impl.Rectangle getPaintable()
org.microemu.device.j2se.J2SESoftButton: boolean isVisible()
org.microemu.device.j2se.J2SESoftButton: void setVisible(boolean)
org.microemu.device.j2se.J2SESoftButton: boolean isPressed()
org.microemu.device.j2se.J2SESoftButton: void setPressed(boolean)
org.microemu.device.j2se.J2SESoftButton: void paint(java.awt.Graphics)
org.microemu.device.j2se.J2SESoftButton: boolean preferredCommandType(javax.microedition.lcdui.Command)
org.microemu.device.j2se.J2SESoftButton: void addCommandType(int)
org.microemu.device.j2se.J2SEButton: J2SEButton(int,java.lang.String,org.microemu.device.impl.Shape,int,java.lang.String,java.lang.String,java.util.Hashtable,boolean)
org.microemu.device.j2se.J2SEButton: int getKeyboardKey()
org.microemu.device.j2se.J2SEButton: int getKeyCode()
org.microemu.device.j2se.J2SEButton: org.microemu.device.impl.ButtonName getFunctionalName()
org.microemu.device.j2se.J2SEButton: int[] getKeyboardKeyCodes()
org.microemu.device.j2se.J2SEButton: char[] getKeyboardCharCodes()
org.microemu.device.j2se.J2SEButton: boolean isModeChange()
org.microemu.device.j2se.J2SEButton: char[] getChars(int)
org.microemu.device.j2se.J2SEButton: boolean isChar(char,int)
org.microemu.device.j2se.J2SEButton: java.lang.String getName()
org.microemu.device.j2se.J2SEButton: org.microemu.device.impl.Shape getShape()
org.microemu.device.j2se.J2SEMutableImage
org.microemu.device.j2se.J2SEMutableImage: J2SEMutableImage(int,int,boolean,int)
org.microemu.device.j2se.J2SEMutableImage: javax.microedition.lcdui.Graphics getGraphics()
org.microemu.device.j2se.J2SEMutableImage: boolean isMutable()
org.microemu.device.j2se.J2SEMutableImage: int getHeight()
org.microemu.device.j2se.J2SEMutableImage: java.awt.Image getImage()
org.microemu.device.j2se.J2SEMutableImage: int getWidth()
org.microemu.device.j2se.J2SEMutableImage: int[] getData()
org.microemu.device.j2se.J2SEMutableImage: void getRGB(int[],int,int,int,int,int,int)
org.microemu.device.impl.DeviceImpl
org.microemu.device.impl.DeviceImpl: java.lang.String DEFAULT_LOCATION
org.microemu.device.impl.DeviceImpl: java.lang.String RESIZABLE_LOCATION
org.microemu.device.impl.DeviceImpl: DeviceImpl()
org.microemu.device.impl.DeviceImpl: org.microemu.device.impl.DeviceImpl create(org.microemu.device.EmulatorContext,java.lang.ClassLoader,java.lang.String,java.lang.Class)
org.microemu.device.impl.DeviceImpl: void init()
org.microemu.device.impl.DeviceImpl: void init(org.microemu.device.EmulatorContext)
org.microemu.device.impl.DeviceImpl: void init(org.microemu.device.EmulatorContext,java.lang.String)
org.microemu.device.impl.DeviceImpl: java.lang.String getDescriptorLocation()
org.microemu.device.impl.DeviceImpl: void destroy()
org.microemu.device.impl.DeviceImpl: java.lang.String getName()
org.microemu.device.impl.DeviceImpl: org.microemu.device.EmulatorContext getEmulatorContext()
org.microemu.device.impl.DeviceImpl: org.microemu.device.InputMethod getInputMethod()
org.microemu.device.impl.DeviceImpl: org.microemu.device.FontManager getFontManager()
org.microemu.device.impl.DeviceImpl: org.microemu.device.DeviceDisplay getDeviceDisplay()
org.microemu.device.impl.DeviceImpl: javax.microedition.lcdui.Image getNormalImage()
org.microemu.device.impl.DeviceImpl: javax.microedition.lcdui.Image getOverImage()
org.microemu.device.impl.DeviceImpl: javax.microedition.lcdui.Image getPressedImage()
org.microemu.device.impl.DeviceImpl: java.util.Vector getSoftButtons()
org.microemu.device.impl.DeviceImpl: java.util.Vector getButtons()
org.microemu.device.impl.DeviceImpl: boolean hasPointerEvents()
org.microemu.device.impl.DeviceImpl: boolean hasPointerMotionEvents()
org.microemu.device.impl.DeviceImpl: boolean hasRepeatEvents()
org.microemu.device.impl.DeviceImpl: boolean vibrate(int)
org.microemu.device.impl.DeviceImpl: java.util.Map getSystemProperties()
org.microemu.device.j2se.J2SEDeviceDisplay
org.microemu.device.j2se.J2SEDeviceDisplay: J2SEDeviceDisplay(org.microemu.device.EmulatorContext)
org.microemu.device.j2se.J2SEDeviceDisplay: boolean flashBacklight(int)
org.microemu.device.j2se.J2SEDeviceDisplay: int getHeight()
org.microemu.device.j2se.J2SEDeviceDisplay: int getWidth()
org.microemu.device.j2se.J2SEDeviceDisplay: int getFullHeight()
org.microemu.device.j2se.J2SEDeviceDisplay: int getFullWidth()
org.microemu.device.j2se.J2SEDeviceDisplay: boolean isColor()
org.microemu.device.j2se.J2SEDeviceDisplay: boolean isFullScreenMode()
org.microemu.device.j2se.J2SEDeviceDisplay: int numAlphaLevels()
org.microemu.device.j2se.J2SEDeviceDisplay: int numColors()
org.microemu.device.j2se.J2SEDeviceDisplay: void paintControls(java.awt.Graphics)
org.microemu.device.j2se.J2SEDeviceDisplay: void paintDisplayable(org.microemu.device.j2se.J2SEGraphicsSurface,int,int,int,int)
org.microemu.device.j2se.J2SEDeviceDisplay: void repaint(int,int,int,int)
org.microemu.device.j2se.J2SEDeviceDisplay: void setScrollDown(boolean)
org.microemu.device.j2se.J2SEDeviceDisplay: void setScrollUp(boolean)
org.microemu.device.j2se.J2SEDeviceDisplay: boolean isResizable()
org.microemu.device.j2se.J2SEDeviceDisplay: void setResizable(boolean)
org.microemu.device.j2se.J2SEDeviceDisplay: org.microemu.device.impl.Rectangle getDisplayRectangle()
org.microemu.device.j2se.J2SEDeviceDisplay: org.microemu.device.impl.Rectangle getDisplayPaintable()
org.microemu.device.j2se.J2SEDeviceDisplay: org.microemu.device.impl.Color getBackgroundColor()
org.microemu.device.j2se.J2SEDeviceDisplay: org.microemu.device.impl.Color getForegroundColor()
org.microemu.device.j2se.J2SEDeviceDisplay: javax.microedition.lcdui.Image createImage(int,int,boolean,int)
org.microemu.device.j2se.J2SEDeviceDisplay: javax.microedition.lcdui.Image createImage(java.lang.String)
org.microemu.device.j2se.J2SEDeviceDisplay: javax.microedition.lcdui.Image createImage(javax.microedition.lcdui.Image)
org.microemu.device.j2se.J2SEDeviceDisplay: javax.microedition.lcdui.Image createImage(java.io.InputStream)
org.microemu.device.j2se.J2SEDeviceDisplay: javax.microedition.lcdui.Image createRGBImage(int[],int,int,boolean)
org.microemu.device.j2se.J2SEDeviceDisplay: javax.microedition.lcdui.Image createImage(javax.microedition.lcdui.Image,int,int,int,int,int)
org.microemu.device.j2se.J2SEDeviceDisplay: javax.microedition.lcdui.Image createImage(byte[],int,int)
org.microemu.device.j2se.J2SEDeviceDisplay: javax.microedition.lcdui.Graphics getGraphics(javax.microedition.lcdui.game.GameCanvas)
org.microemu.device.j2se.J2SEDeviceDisplay: void flushGraphics(javax.microedition.lcdui.game.GameCanvas,int,int,int,int)
org.microemu.device.j2se.J2SEDeviceDisplay: void setNumAlphaLevels(int)
org.microemu.device.j2se.J2SEDeviceDisplay: void setNumColors(int)
org.microemu.device.j2se.J2SEDeviceDisplay: void setIsColor(boolean)
org.microemu.device.j2se.J2SEDeviceDisplay: void setBackgroundColor(org.microemu.device.impl.Color)
org.microemu.device.j2se.J2SEDeviceDisplay: void setForegroundColor(org.microemu.device.impl.Color)
org.microemu.device.j2se.J2SEDeviceDisplay: void setDisplayRectangle(org.microemu.device.impl.Rectangle)
org.microemu.device.j2se.J2SEDeviceDisplay: void setDisplayPaintable(org.microemu.device.impl.Rectangle)
org.microemu.device.j2se.J2SEDeviceDisplay: void setMode123Image(org.microemu.device.impl.PositionedImage)
org.microemu.device.j2se.J2SEDeviceDisplay: void setModeAbcLowerImage(org.microemu.device.impl.PositionedImage)
org.microemu.device.j2se.J2SEDeviceDisplay: void setModeAbcUpperImage(org.microemu.device.impl.PositionedImage)
org.microemu.device.j2se.J2SEDeviceDisplay: javax.microedition.lcdui.Image createSystemImage(java.net.URL)
org.microemu.device.j2se.J2SEDeviceDisplay: org.microemu.device.impl.Button createButton(int,java.lang.String,org.microemu.device.impl.Shape,int,java.lang.String,java.lang.String,java.util.Hashtable,boolean)
org.microemu.device.j2se.J2SEDeviceDisplay: org.microemu.device.impl.SoftButton createSoftButton(int,java.lang.String,org.microemu.device.impl.Shape,int,java.lang.String,org.microemu.device.impl.Rectangle,java.lang.String,java.util.Vector,javax.microedition.lcdui.Font)
org.microemu.device.j2se.J2SEDeviceDisplay: org.microemu.device.impl.SoftButton createSoftButton(int,java.lang.String,org.microemu.device.impl.Rectangle,javax.microedition.lcdui.Image,javax.microedition.lcdui.Image)
org.microemu.applet.Main
org.microemu.applet.Main: long serialVersionUID
org.microemu.applet.Main: javax.microedition.midlet.MIDlet midlet
org.microemu.applet.Main: org.microemu.RecordStoreManager recordStoreManager
org.microemu.applet.Main: org.microemu.util.JadProperties manifest
org.microemu.applet.Main: org.microemu.app.ui.swing.SwingDeviceComponent devicePanel
org.microemu.applet.Main: java.lang.String accessibleHost
org.microemu.applet.Main: org.microemu.device.EmulatorContext emulatorContext
org.microemu.applet.Main: Main()
org.microemu.applet.Main: void init()
org.microemu.applet.Main: void start()
org.microemu.applet.Main: void stop()
org.microemu.applet.Main: void destroy()
org.microemu.applet.Main: org.microemu.RecordStoreManager getRecordStoreManager()
org.microemu.applet.Main: java.lang.String getAppProperty(java.lang.String)
org.microemu.applet.Main: java.lang.String getSuiteName()
org.microemu.applet.Main: java.io.InputStream getResourceAsStream(java.lang.Class,java.lang.String)
org.microemu.applet.Main: int checkPermission(java.lang.String)
org.microemu.applet.Main: boolean platformRequest(java.lang.String)
org.microemu.applet.Main: void notifyDestroyed(org.microemu.MIDletContext)
org.microemu.applet.Main: void destroyMIDletContext(org.microemu.MIDletContext)
org.microemu.applet.Main: org.microemu.app.launcher.Launcher getLauncher()
org.microemu.applet.Main: java.lang.String getAppletInfo()
org.microemu.applet.Main: java.lang.String[][] getParameterInfo()
org.microemu.applet.Main: org.microemu.app.ui.swing.SwingDeviceComponent access$000(org.microemu.applet.Main)
org.microemu.applet.Main: javax.microedition.midlet.MIDlet access$100(org.microemu.applet.Main)
org.microemu.cldc.datagram.Connection
org.microemu.cldc.datagram.Connection: java.lang.String PROTOCOL
org.microemu.cldc.datagram.Connection: java.net.DatagramSocket socket
org.microemu.cldc.datagram.Connection: java.lang.String address
org.microemu.cldc.datagram.Connection: Connection()
org.microemu.cldc.datagram.Connection: void close()
org.microemu.cldc.datagram.Connection: int getMaximumLength()
org.microemu.cldc.datagram.Connection: int getNominalLength()
org.microemu.cldc.datagram.Connection: void send(javax.microedition.io.Datagram)
org.microemu.cldc.datagram.Connection: void receive(javax.microedition.io.Datagram)
org.microemu.cldc.datagram.Connection: javax.microedition.io.Datagram newDatagram(int)
org.microemu.cldc.datagram.Connection: javax.microedition.io.Datagram newDatagram(int,java.lang.String)
org.microemu.cldc.datagram.Connection: javax.microedition.io.Datagram newDatagram(byte[],int)
org.microemu.cldc.datagram.Connection: javax.microedition.io.Datagram newDatagram(byte[],int,java.lang.String)
org.microemu.cldc.datagram.Connection: java.lang.String getLocalAddress()
org.microemu.cldc.datagram.Connection: int getLocalPort()
org.microemu.cldc.datagram.Connection: javax.microedition.io.Connection openConnection(java.lang.String,int,boolean)
org.microemu.cldc.http.Connection
org.microemu.cldc.http.Connection: java.net.URLConnection cn
org.microemu.cldc.http.Connection: boolean connected
org.microemu.cldc.http.Connection: boolean allowNetworkConnection
org.microemu.cldc.http.Connection: Connection()
org.microemu.cldc.http.Connection: javax.microedition.io.Connection openConnection(java.lang.String,int,boolean)
org.microemu.cldc.http.Connection: void close()
org.microemu.cldc.http.Connection: java.lang.String getURL()
org.microemu.cldc.http.Connection: java.lang.String getProtocol()
org.microemu.cldc.http.Connection: java.lang.String getHost()
org.microemu.cldc.http.Connection: java.lang.String getFile()
org.microemu.cldc.http.Connection: java.lang.String getRef()
org.microemu.cldc.http.Connection: java.lang.String getQuery()
org.microemu.cldc.http.Connection: int getPort()
org.microemu.cldc.http.Connection: java.lang.String getRequestMethod()
org.microemu.cldc.http.Connection: void setRequestMethod(java.lang.String)
org.microemu.cldc.http.Connection: java.lang.String getRequestProperty(java.lang.String)
org.microemu.cldc.http.Connection: void setRequestProperty(java.lang.String,java.lang.String)
org.microemu.cldc.http.Connection: int getResponseCode()
org.microemu.cldc.http.Connection: java.lang.String getResponseMessage()
org.microemu.cldc.http.Connection: long getExpiration()
org.microemu.cldc.http.Connection: long getDate()
org.microemu.cldc.http.Connection: long getLastModified()
org.microemu.cldc.http.Connection: java.lang.String getHeaderField(java.lang.String)
org.microemu.cldc.http.Connection: int getHeaderFieldInt(java.lang.String,int)
org.microemu.cldc.http.Connection: long getHeaderFieldDate(java.lang.String,long)
org.microemu.cldc.http.Connection: java.lang.String getHeaderField(int)
org.microemu.cldc.http.Connection: java.lang.String getHeaderFieldKey(int)
org.microemu.cldc.http.Connection: int getImplIndex(int)
org.microemu.cldc.http.Connection: java.io.InputStream openInputStream()
org.microemu.cldc.http.Connection: java.io.DataInputStream openDataInputStream()
org.microemu.cldc.http.Connection: java.io.OutputStream openOutputStream()
org.microemu.cldc.http.Connection: java.io.DataOutputStream openDataOutputStream()
org.microemu.cldc.http.Connection: java.lang.String getType()
org.microemu.cldc.http.Connection: java.lang.String getEncoding()
org.microemu.cldc.http.Connection: long getLength()
org.microemu.cldc.http.Connection: boolean isAllowNetworkConnection()
org.microemu.cldc.http.Connection: void setAllowNetworkConnection(boolean)
org.microemu.cldc.http.Connection: void <clinit>()
org.microemu.cldc.https.Connection
org.microemu.cldc.https.Connection: javax.net.ssl.SSLContext sslContext
org.microemu.cldc.https.Connection: javax.microedition.io.SecurityInfo securityInfo
org.microemu.cldc.https.Connection: Connection()
org.microemu.cldc.https.Connection: javax.microedition.io.SecurityInfo getSecurityInfo()
org.microemu.cldc.https.Connection: java.lang.String getProtocol()
org.microemu.cldc.https.Connection: int getPort()
org.microemu.cldc.http.Connection: java.net.URLConnection cn
org.microemu.cldc.http.Connection: boolean connected
org.microemu.cldc.http.Connection: boolean allowNetworkConnection
org.microemu.cldc.http.Connection: Connection()
org.microemu.cldc.http.Connection: javax.microedition.io.Connection openConnection(java.lang.String,int,boolean)
org.microemu.cldc.http.Connection: void close()
org.microemu.cldc.http.Connection: java.lang.String getURL()
org.microemu.cldc.http.Connection: java.lang.String getProtocol()
org.microemu.cldc.http.Connection: java.lang.String getHost()
org.microemu.cldc.http.Connection: java.lang.String getFile()
org.microemu.cldc.http.Connection: java.lang.String getRef()
org.microemu.cldc.http.Connection: java.lang.String getQuery()
org.microemu.cldc.http.Connection: int getPort()
org.microemu.cldc.http.Connection: java.lang.String getRequestMethod()
org.microemu.cldc.http.Connection: void setRequestMethod(java.lang.String)
org.microemu.cldc.http.Connection: java.lang.String getRequestProperty(java.lang.String)
org.microemu.cldc.http.Connection: void setRequestProperty(java.lang.String,java.lang.String)
org.microemu.cldc.http.Connection: int getResponseCode()
org.microemu.cldc.http.Connection: java.lang.String getResponseMessage()
org.microemu.cldc.http.Connection: long getExpiration()
org.microemu.cldc.http.Connection: long getDate()
org.microemu.cldc.http.Connection: long getLastModified()
org.microemu.cldc.http.Connection: java.lang.String getHeaderField(java.lang.String)
org.microemu.cldc.http.Connection: int getHeaderFieldInt(java.lang.String,int)
org.microemu.cldc.http.Connection: long getHeaderFieldDate(java.lang.String,long)
org.microemu.cldc.http.Connection: java.lang.String getHeaderField(int)
org.microemu.cldc.http.Connection: java.lang.String getHeaderFieldKey(int)
org.microemu.cldc.http.Connection: int getImplIndex(int)
org.microemu.cldc.http.Connection: java.io.InputStream openInputStream()
org.microemu.cldc.http.Connection: java.io.DataInputStream openDataInputStream()
org.microemu.cldc.http.Connection: java.io.OutputStream openOutputStream()
org.microemu.cldc.http.Connection: java.io.DataOutputStream openDataOutputStream()
org.microemu.cldc.http.Connection: java.lang.String getType()
org.microemu.cldc.http.Connection: java.lang.String getEncoding()
org.microemu.cldc.http.Connection: long getLength()
org.microemu.cldc.http.Connection: boolean isAllowNetworkConnection()
org.microemu.cldc.http.Connection: void setAllowNetworkConnection(boolean)
org.microemu.cldc.http.Connection: void <clinit>()
org.microemu.cldc.ssl.Connection
org.microemu.cldc.ssl.Connection: javax.microedition.io.SecurityInfo securityInfo
org.microemu.cldc.ssl.Connection: Connection()
org.microemu.cldc.ssl.Connection: javax.microedition.io.Connection open(java.lang.String)
org.microemu.cldc.ssl.Connection: void close()
org.microemu.cldc.ssl.Connection: javax.microedition.io.SecurityInfo getSecurityInfo()
org.microemu.cldc.socket.SocketConnection: java.net.Socket socket
org.microemu.cldc.socket.SocketConnection: SocketConnection()
org.microemu.cldc.socket.SocketConnection: SocketConnection(java.lang.String,int)
org.microemu.cldc.socket.SocketConnection: SocketConnection(java.net.Socket)
org.microemu.cldc.socket.SocketConnection: java.lang.String getAddress()
org.microemu.cldc.socket.SocketConnection: java.lang.String getLocalAddress()
org.microemu.cldc.socket.SocketConnection: int getLocalPort()
org.microemu.cldc.socket.SocketConnection: int getPort()
org.microemu.cldc.socket.SocketConnection: int getSocketOption(byte)
org.microemu.cldc.socket.SocketConnection: void setSocketOption(byte,int)
org.microemu.cldc.socket.SocketConnection: void close()
org.microemu.cldc.socket.SocketConnection: java.io.InputStream openInputStream()
org.microemu.cldc.socket.SocketConnection: java.io.DataInputStream openDataInputStream()
org.microemu.cldc.socket.SocketConnection: java.io.OutputStream openOutputStream()
org.microemu.cldc.socket.SocketConnection: java.io.DataOutputStream openDataOutputStream()
org.microemu.cldc.socket.Connection
org.microemu.cldc.socket.Connection: Connection()
org.microemu.cldc.socket.Connection: javax.microedition.io.Connection open(java.lang.String)
org.microemu.cldc.socket.Connection: void close()
